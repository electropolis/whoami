name: "Release a tag"
on:
  push:
    tags:
      - v*
      
permissions: write-all
env:
    REPO_NAME: ${{ github.repository }}

jobs:

  build-push:
    name: Prepare Docker Image for deployment
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}

    steps:

      - name: Check out the repo
        uses: actions/checkout@v4
      
      
      - name: Set APP Name
        id: vars
        run: echo "docker_name=$( echo ${{ env.REPO_NAME }} | cut -d '/' -f2)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            eset/${{ steps.vars.outputs.docker_name }}

      - name: Build and push Docker images
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  helm-app-version:
    runs-on: ubuntu-latest
    name: Create PR with new AppVersion in Helm Repository 

    steps:

      - name: Checkout the Helm repo for ${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          repository: electropolis/helm  # Specify the repository you want to checkout
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set APP Name
        id: vars
        run: echo "app_name=$( echo ${{ env.REPO_NAME }} | cut -d '/' -f2)" >> $GITHUB_OUTPUT

      - name: Change current appVersion to ${{ github.ref_name }}
        run: |
          sed -i 's/^appVersion:.*$/appVersion: "${{ github.ref_name }}"/' ${{ steps.vars.outputs.app_name }}/Chart.yaml
        working-directory: ${{ github.workspace }}

      - name: Commit changes and push with tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git status
          git diff
          git remote -v
          git remote remove origin
          git remote add origin https://${{ secrets.GITHUB_TOKEN }}@github.com/electropolis/${{ steps.vars.outputs.app_name }}
          git checkout -b ${{ github.ref_name }}
          git add -A
          git commit -m "Add new appVersion ${{ github.ref_name }}"
          git tag -a ${{ github.ref_name }} HEAD -m "appVersion: ${{ github.ref_name }}"
          git push -u origin ${{ github.ref_name }} --follow-tags 


      # - name: GitHub Push
      # # You may pin to the exact commit or the version.
      # # uses: ad-m/github-push-action@40bf560936a8022e68a3c00e7d2abefaf01305a6
      #   uses: ad-m/github-push-action@v0.6.0
      #   with:
      #     # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     # Repository name to push. Default or empty value represents current github repository (${GITHUB_REPOSITORY})
      #     repository: electropolis/helm # optional, default is 
      #     # Destination branch to push changes
      #     branch: ${{ github.ref_name }} # optional, default is master
      #     # Determines if force push is used
      #     #force: # optional
      #     # Determines if --tags is used
      #     tags: ${{ github.ref_name }} # optional
      #     # Directory to change to before pushing.
      #     #directory: # optional, default is .
